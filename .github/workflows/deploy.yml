name: Deploy to Assure VM

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Docker BuildKit
        run: echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV  # Enabling BuildKit

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Build app dependencies
        run: |
          docker build --target build-deps -t auth-service .

      - name: Build final Docker image
        run: |
          docker build --target final -t auth-service .

      - name: Save private key
        run: |
          echo "${{ secrets.VM_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Copy files to VM (and update if already exists)
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} << 'EOF'
            # Check if the authService folder exists and remove it
            if [ -d "/home/${{ secrets.VM_USER }}/authService" ]; then
              rm -rf /home/${{ secrets.VM_USER }}/authService
            fi
            # Copy the updated files
            exit
          EOF
          scp -o StrictHostKeyChecking=no -i key.pem -r . ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }}:/home/${{ secrets.VM_USER }}/authService

      - name: Stop and remove any running containers named auth-service
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} << 'EOF'
            docker stop node-container || true
            docker rm node-container || true
          EOF

      - name: Remove previous Docker images named auth-service
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} << 'EOF'
            docker rmi -f auth-service || true
          EOF

      - name: Run Docker container on VM
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} << 'EOF'
            cd /home/${{ secrets.VM_USER }}/authService
            docker build -t auth-service .
            docker run -d -p 5000:5000 --name node-container auth-service
          EOF
